import csv
from collections import defaultdict

def count_malware_families(input_csv, output_csv):
    family_counts = defaultdict(int)

    # Read and count malware family types
    with open(input_csv, mode='r', newline='') as file:
        reader = csv.reader(file)
        for row in reader:
            if len(row) != 2:
                continue  # Skip malformed lines
            _, family = row
            family = family.strip().lower()  # Normalize family names
            family_counts[family] += 1

    # Write counts to a new CSV file
    with open(output_csv, mode='w', newline='') as file:
        writer = csv.writer(file)
        writer.writerow(["category", "count"])
        for family, count in sorted(family_counts.items(), key=lambda x: x[1], reverse=True):
            writer.writerow([family, count])

    print(f"Done! Output written to {output_csv}")

# Example usage:
count_malware_families("bluehex_malware_category.csv", "malware_family_counts.csv")
